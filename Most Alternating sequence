import random

# Set the parameters
n_monomers = 200
molar_ratio = 0.5
r_MMA = 2.6
r_nBA = 0.39

# Set the initial conditions
most_alternating_seq = []
most_alternating_freq = -1

# Repeat the simulation 5 times
for i in range(5):
    polymer = []
    monomer_counts = {'MMA': 0, 'nBA': 0}

    # Repeat until we reach the desired number of monomer units
    for j in range(n_monomers):
        # Calculate the probabilities of adding MMA or nBA
        prob_MMA = (molar_ratio * r_nBA) / ((molar_ratio * r_nBA) + ((1 - molar_ratio) * r_MMA))
        prob_nBA = 1 - prob_MMA

        # Select the next monomer based on the probabilities
        r = random.random()
        if r < prob_MMA:
            polymer.append('MMA')
            monomer_counts['MMA'] += 1
        else:
            polymer.append('nBA')
            monomer_counts['nBA'] += 1

    # Calculate the alternating behavior of the sequence
    alternating_freq = 0
    for k in range(1, len(polymer)):
        if polymer[k] != polymer[k-1]:
            alternating_freq += 1

    # Update the most alternating sequence
    if alternating_freq > most_alternating_freq:
        most_alternating_seq = polymer
        most_alternating_freq = alternating_freq

# Output the most alternating sequence and frequency
print("Most alternating sequence:", most_alternating_seq)
print("Frequency of alternating monomers:", most_alternating_freq)
